name: dockercompose16813498347866987284
services:
  agenticaisqlserver:
    container_name: agenticaisqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: YourStrong!Passw0rd
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 1433
        published: "1433"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: sqlserverdata
        target: /var/opt/mssql
        volume: {}
  blobstorage:
    command:
      - azurite
      - --blobHost
      - 0.0.0.0
      - --loose
      - --skipApiVersionCheck
    container_name: blobstorage
    image: mcr.microsoft.com/azure-storage/azurite
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 10000
        published: "10000"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: blobstorage_data
        target: /data
        volume: {}
  docx-pdf-service:
    build:
      context: D:\Code Files\Learning\Semantic kernel\AI-Agent\docx-to-pdf-node-service
      dockerfile: Dockerfile
    container_name: docx-pdf-service
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 3000
        published: "3000"
        protocol: tcp
    volumes:
      - type: volume
        source: docx_uploads
        target: /app/uploads
        volume: {}
      - type: volume
        source: docx_outputs
        target: /app/outputs
        volume: {}
  ffmpeg-node:
    build:
      context: D:\Code Files\Learning\Semantic kernel\AI-Agent\ffmpeg-node-service
      dockerfile: Dockerfile
    container_name: ffmpeg-node
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 5000
        published: "5001"
        protocol: tcp
    volumes:
      - type: volume
        source: ffmpeg_data
        target: /ffmpeg_data
        volume: {}
  qdrant:
    container_name: qdrant
    image: qdrant/qdrant:v1.12.4
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 6333
        published: "6333"
        protocol: tcp
      - mode: ingress
        target: 6334
        published: "6334"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: qdrant_data
        target: /qdrant/storage
        volume: {}
  semantickernel.aiagentbackend:
    build:
      context: D:\Code Files\Learning\Semantic kernel\AI-Agent\backend\SemanticKernel.AIAgentBackend
      dockerfile: SemanticKernel.AIAgentBackend/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
        LAUNCHING_FROM_VS: "true"
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: SemanticKernel.AIAgentBackend
      target: base
    container_name: SemanticKernel.AIAgentBackend
    depends_on:
      agenticaisqlserver:
        condition: service_started
        required: true
      blobstorage:
        condition: service_started
        required: true
      docx-pdf-service:
        condition: service_started
        required: true
      ffmpeg-node:
        condition: service_started
        required: true
      qdrant:
        condition: service_started
        required: true
    entrypoint:
      - dotnet
      - --roll-forward
      - Major
      - /VSTools/DistrolessHelper/DistrolessHelper.dll
      - --wait
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ConnectionStrings__AppDBConnectionString: Server=agenticaisqlserver,1433;Database=AgenticAIDB;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /.nuget/fallbackpackages
    image: semantickernelaiagentbackend:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages --additionalProbingPath /.nuget/fallbackpackages  "/app/bin/Debug/net8.0/SemanticKernel.AIAgentBackend.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: dotnet --roll-forward Major /VSTools/DistrolessHelper/DistrolessHelper.dll --stop dotnet
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      app_network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Munendra\AppData\Roaming\Microsoft\UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Munendra\AppData\Roaming\ASP.NET\Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: D:\Code Files\Learning\Semantic kernel\AI-Agent\backend\SemanticKernel.AIAgentBackend\SemanticKernel.AIAgentBackend
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: D:\Code Files\Learning\Semantic kernel\AI-Agent\backend\SemanticKernel.AIAgentBackend
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Munendra\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Munendra\.nuget\packages
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
        target: /.nuget/fallbackpackages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Munendra\AppData\Roaming\ASP.NET\Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Munendra\AppData\Roaming\Microsoft\UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\linux-x64\net8.0
        target: /VSTools
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
networks:
  app_network:
    name: dockercompose16813498347866987284_app_network
    driver: bridge
volumes:
  blobstorage_data:
    name: dockercompose16813498347866987284_blobstorage_data
    driver: local
  docx_outputs:
    name: dockercompose16813498347866987284_docx_outputs
    driver: local
  docx_uploads:
    name: dockercompose16813498347866987284_docx_uploads
    driver: local
  ffmpeg_data:
    name: dockercompose16813498347866987284_ffmpeg_data
    driver: local
  qdrant_data:
    name: dockercompose16813498347866987284_qdrant_data
    driver: local
  sqlserverdata:
    name: dockercompose16813498347866987284_sqlserverdata
    driver: local